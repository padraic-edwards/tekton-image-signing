apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: init-task
spec:
  inputs:
    params:
      - name: task-pvc
        description: the output pvc
      - name: repository
        description: the git repo
      - name: revision
        description: the revision
        default: master
      - name: apikey
        description: the ibmcloud api key
      - name: api
        description: the ibmcloud api endpoint
        default: "https://cloud.ibm.com"
      - name: registryNamespace
        description: the ibmcloud registry namespace
      - name: imageName
        description: the base image name
        default: "hello-containers-tekton"
      - name: registryRegion
        description: the ibmcloud registry region
      - name: region
        description: the ibmcloud region
      - name: vaultInstance
        description: The name of the Key Protect instance
      - name: buildSigner
        description: The build signer
      - name: validationSigner
        description: The validation signer
      - name: resourceGroup
        description: The resource group
      - name: cluster
        description: The cluster name      
  steps:
    - name: clone-repo
      image: alpine/git
      env:
        - name: REPOSITORY
          value: $(inputs.params.repository)
        - name: REVISION
          value: $(inputs.params.revision)
        - name: ARCHIVE_DIR
          value: "/artifacts"
      command: ["/bin/sh", "-c"]
      args:
        - set -e -o pipefail;
          echo "Cloning $REPOSITORY";
          git clone -q -b $REVISION $REPOSITORY .;
      volumeMounts:
        - mountPath: /artifacts
          name: task-volume
    - name: pre-build-check
      image: ibmcom/pipeline-base-image
      env:
        - name: IBM_CLOUD_API_KEY
          value: $(inputs.params.apikey)
        - name: API
          value: $(inputs.params.api)
        - name: HOME
          value: "/root"
        - name: REGISTRY_NAMESPACE
          value: $(inputs.params.registryNamespace)
        - name: IMAGE_NAME
          value: $(inputs.params.imageName)
        - name: VAULT_INSTANCE
          value: $(inputs.params.vaultInstance)
        - name: DEVOPS_BUILD_SIGNER
          value: $(inputs.params.buildSigner)
        - name: DEVOPS_VALIDATION_SIGNER
          value: $(inputs.params.validationSigner)
        - name: IBMCLOUD_TARGET_RESOURCE_GROUP
          value: $(inputs.params.resourceGroup)
        - name: REGISTRY_REGION
          value: $(inputs.params.registryRegion)
        - name: IBMCLOUD_TARGET_REGION
          value: $(inputs.params.region)
        - name: BUILD_CLUSTER
          value: $(inputs.params.cluster)
        - name: ARCHIVE_DIR
          value: "/artifacts"
      command: ["/bin/bash", "-c"]
      args:
        - |
          set -e -o pipefail
          source <(curl -sSL "https://raw.githubusercontent.com/open-toolchain/commons/master/scripts/image_signing/add_docker.sh")
          source <(curl -sSL "https://raw.githubusercontent.com/huayuenh/tekton-image-signing/master/init_dct.sh")
      volumeMounts:
        - mountPath: /artifacts
          name: task-volume
  volumes:
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.task-pvc)
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: cluster-policy-task
spec:
  inputs:
    params:
      - name: task-pvc
        description: the task pvc
      - name: repository
        description: the git repo
      - name: revision
        description: the revision
        default: master
      - name: apikey
        description: the ibmcloud api key
      - name: api
        description: the ibmcloud api endpoint
        default: "https://cloud.ibm.com"
      - name: registryRegion
        description: the ibmcloud registry region           
  steps:
    - name: clone-repo
      image: alpine/git
      env:
        - name: REPOSITORY
          value: $(inputs.params.repository)
        - name: REVISION
          value: $(inputs.params.revision)
        - name: ARCHIVE_DIR
          value: "/artifacts"
      command: ["/bin/bash", "-c"]
      args:
        - |
          set -e -o pipefail
          source <(curl -sSL "https://raw.githubusercontent.com/huayuenh/tekton-image-signing/master/apply_image_policy.sh")
      volumeMounts:
        - mountPath: /artifacts
          name: task-volume
  volumes:
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.task-pvc)